{"version":3,"sources":["components/Profile/UserInfo/UserInfo.module.css","components/Profile/Posts/PostItem/PostItem.module.css","components/NavBar/NavBar.module.css","components/FormButton/FormButton.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Avatar/Avatar.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Messages/NewMessage/NewMessage.module.css","components/Profile/Posts/NewPost/NewPost.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/NavBar/FriendItem/FriendItem.module.css","components/Dialogs/Messages/Messages.module.css","store/types/posts.tsx","store/types/dialogs.tsx","redux/state.ts","components/Avatar/Avatar.tsx","components/Profile/UserInfo/UserInfo.tsx","components/FormButton/FormButton.tsx","components/Profile/Posts/NewPost/NewPost.tsx","store/actions/posts.tsx","components/Profile/Posts/PostItem/PostItem.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Profile.tsx","Pages/ProfilePage/ProfilePage.tsx","components/Dialogs/Dialog/Dialog.tsx","store/actions/dialogs.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/NewMessage/NewMessage.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","Pages/DialogsPage/DialogsPage.tsx","Pages/NewsPage/NewsPage.tsx","Pages/MusicPage/MusicPage.tsx","Pages/SettingsPage/SettingsPage.tsx","components/Header/Header.tsx","components/NavBar/FriendItem/FriendItem.tsx","components/NavBar/NavBar.tsx","App.tsx","routes.tsx","index.tsx"],"names":["module","exports","UPDATE_NEW_POST_TEXT","ADD_NEW_POST","SELECT_DIALOG","store","_state","profile","user","id","firstName","lastName","surName","avatar","background","birthDate","city","education","website","posts","userId","newPostText","text","time","Date","likes","dialogs","selectedDialog","selectedMessages","userDialogs","name","userMessages","messages","v1","message","navbar","friends","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","postsTypes","postsClone","clone","newPost","newText","dialogsTypes","messagesClone","getRandomColour","rand","Math","random","round","Avatar","avatarUrl","size","shape","backgroundImage","backgroundColor","className","s","join","style","UserInfo","info","description","userInfo","userName","websiteLink","href","FormButton","primary","value","position","mode","formButton","NewPost","createNewPost","types","newPostContainer","onSubmit","event","preventDefault","rows","placeholder","onChange","currentTarget","onKeyPress","key","PostItem","date","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","humanDate","postItem","container","dateTime","reaction","Posts","userPosts","mappedPosts","map","post","postsContainer","title","Profile","image","ProfilePage","Dialog","dialog","itemClassName","item","onClick","link","to","activeClassName","active","Message","itemContainer","messageContainer","NewMessage","messageRef","useRef","newMessageContainer","form","current","ref","newMessageText","Messages","mappedMessages","messagesContainer","Dialogs","mappedDialogs","list","DialogsPage","NewsPage","MusicPage","SettingsPage","Header","header","src","alt","FriendItem","friend","friendContainer","friendName","nav","NavBar","mappedNavigation","toLowerCase","mappedFriends","Object","values","friendsContainer","App","state","routes","path","useRoutes","bind","rerenderTree","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06da11f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__2EQyR\",\"description\":\"UserInfo_description__14juR\",\"userName\":\"UserInfo_userName__11PxP\",\"userInfo\":\"UserInfo_userInfo__19Gg7\",\"websiteLink\":\"UserInfo_websiteLink__3D7ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"PostItem_postItem__cJGuU\",\"container\":\"PostItem_container__2JWlg\",\"title\":\"PostItem_title__3ciLf\",\"text\":\"PostItem_text__1-F9Y\",\"date\":\"PostItem_date__2_aLQ\",\"reaction\":\"PostItem_reaction__3faHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\",\"link\":\"NavBar_link__2Iixg\",\"active\":\"NavBar_active__1HRI5\",\"friendsContainer\":\"NavBar_friendsContainer__3dQug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"FormButton_formButton__3Y9lb\",\"primary\":\"FormButton_primary__1Vw-K\",\"secondary\":\"FormButton_secondary__2WLr0\",\"start\":\"FormButton_start__oYJER\",\"center\":\"FormButton_center__2BNk0\",\"end\":\"FormButton_end__le1rA\",\"stretch\":\"FormButton_stretch__AiuYc\",\"small\":\"FormButton_small__3X9yO\",\"medium\":\"FormButton_medium__3A7Ff\",\"large\":\"FormButton_large__3YqLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Message_itemContainer__3Ogp1\",\"messageContainer\":\"Message_messageContainer__50BSK\",\"message\":\"Message_message__2XMh9\",\"time\":\"Message_time__R0PKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__2p0uA\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"list\":\"Dialogs_list__3m0__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2A8Ju\",\"round\":\"Avatar_round__2hSiZ\",\"square\":\"Avatar_square__3sTiD\",\"small\":\"Avatar_small__3X69T\",\"medium\":\"Avatar_medium__1gMp0\",\"large\":\"Avatar_large__ou5Nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2jaF4\",\"link\":\"Dialog_link__2CIRa\",\"active\":\"Dialog_active__2fc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageContainer\":\"NewMessage_newMessageContainer__O9LOI\",\"form\":\"NewMessage_form__1LYM4\",\"newMessageText\":\"NewMessage_newMessageText__1H5T9\",\"button\":\"NewMessage_button__YNSf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostContainer\":\"NewPost_newPostContainer__1vaC7\",\"title\":\"NewPost_title__2nRLX\",\"text\":\"NewPost_text__1eobX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"Posts_postsContainer__3fBmN\",\"title\":\"Posts_title__23BoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"image\":\"Profile_image__2MW_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"image\":\"Header_image__1zcEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"FriendItem_friendContainer__312yD\",\"friendName\":\"FriendItem_friendName__1VsdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3RCBn\"};","export const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\nexport const ADD_NEW_POST = 'ADD-NEW-POST'","export const SELECT_DIALOG = 'SELECT-DIALOG'","import { v1 } from 'uuid'\nimport clone from 'clone-deep'\nimport * as postsTypes from '../store/types/posts'\nimport * as dialogsTypes from '../store/types/dialogs'\nimport * as postsActions from '../store/actions/posts'\nimport * as dialogsActions from '../store/actions/dialogs'\n// TS\nexport type UserTypes = {\n    id: string\n    firstName: string\n    lastName: string\n    surName: string\n    avatar: string\n    background: string\n    birthDate: string\n    city: string\n    education: string\n    website: string\n}\n\nexport type PostTypes = {\n    id: string\n    text: string\n    time: Date\n    likes: number\n}\n\nexport type PostsTypes = {\n    userId: string\n    newPostText: string\n    posts: Array<PostTypes>\n}\n\nexport type ProfileTypes = {\n    user: UserTypes\n    posts: PostsTypes\n}\n\nexport type DialogTypes = {\n    id: string\n    name: string\n}\n\nexport type UserMessageTypes = {\n    id: string\n    avatar: string\n    message: string\n    time: string\n}\n\nexport type UsersMessagesTypes = {\n    [ key: string ]: { messages: Array<UserMessageTypes> }\n}\n\nexport type DialogsTypes = {\n    selectedDialog: string | null\n    selectedMessages: { messages: Array<UserMessageTypes> } | null\n    userDialogs: Array<DialogTypes>\n    userMessages: UsersMessagesTypes\n}\n\nexport type FriendTypes = {\n    id: string\n    name: string\n    avatar: string\n}\n\nexport type FriendsTypes = {\n    [ key: string ]: FriendTypes\n}\n\nexport type NavbarTypes = {\n    friends: FriendsTypes\n}\n\nexport type StateTypes = {\n    profile: ProfileTypes\n    dialogs: DialogsTypes\n    navbar: NavbarTypes\n}\n\nexport type UpdateNewPostTextType = ReturnType<typeof postsActions.updateNewPostText>\nexport type AddNewPostType = ReturnType<typeof postsActions.addNewPost>\nexport type SelectDialogType = ReturnType<typeof dialogsActions.selectDialog>\nexport type ActionType = AddNewPostType | UpdateNewPostTextType | SelectDialogType\n\nexport type StoreType = {\n    _state: StateTypes\n    _callSubscriber: () => void\n    getState: () => StateTypes\n    subscribe: (observer: () => void) => void\n    dispatch: (action: ActionType) => void\n}\n\n// Post Function\nexport const store: StoreType = {\n    _state: {\n        profile: {\n            user: {\n                id: '0',\n                firstName: 'John',\n                lastName: 'Dou',\n                surName: '',\n                avatar: 'https://ichef.bbci.co.uk/news/976/cpsprodpb/A7E9/production/_118158924_gettyimages-507245091.jpg',\n                background: 'https://st.depositphotos.com/1522993/4737/v/950/depositphotos_47372005-stock-illustration-orange-blue-background-with-triagles.jpg',\n                birthDate: '2 January 2000',\n                city: 'Minsk',\n                education: 'BSU\\'11',\n                website: 'https://it-kamasutra.com',\n            },\n            posts: {\n                userId: '0',\n                newPostText: '',\n                posts: [\n                    {\n                        id: 'ccc',\n                        text: 'В новой записи вы решили уточнить точное время дня (а точнее ночи), когда именно была сделана запись. Строку со временем можно оставить просто текстом, но есть вариант получше. В HTML есть специальный тег для разметки даты и времени',\n                        time: new Date(`2021-07-18T15:07:55.582Z`),\n                        likes: 3,\n\n                    },\n                    {\n                        id: 'vvv',\n                        text: 'Инструменты для статической типизации, такие как Flow или TypeScript, позволяют отлавливать большую часть ошибок ещё до исполнения кода. Кроме того, они существенно улучшают процессы разработки, добавляя автодополнение и другие возможности. Для приложений с большой кодовой базой мы рекомендуем использовать Flow или TypeScript вместо PropTypes.',\n                        time: new Date(`2021-07-18T18:07:13.943Z`),\n                        likes: 20,\n                    },\n                    {\n                        id: 'lll',\n                        text: 'Flow — это библиотека для статической типизации JavaScript, разработанная в Facebook и часто применяемая в связке с React. Flow расширяет возможности JavaScript, добавляя аннотации типов для переменных, функций и React-компонентов.',\n                        time: new Date(`2021-07-18T18:38:10.515Z`),\n                        likes: 11,\n                    },\n                ],\n            },\n        },\n        dialogs: {\n            selectedDialog: null,\n            selectedMessages: null,\n            userDialogs: [\n                {\n                    id: '0',\n                    name: 'John',\n                },\n                {\n                    id: '1',\n                    name: 'Sara',\n                },\n                {\n                    id: '2',\n                    name: 'George',\n                },\n                {\n                    id: '3',\n                    name: 'Jinny',\n                },\n                {\n                    id: '4',\n                    name: 'Harry',\n                },\n            ],\n            userMessages: {\n                '0': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Hi',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'How are you?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'What are you doing now?',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '1': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Hello',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Do you wanna go for walks?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Let\\'s meet at five',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '2': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Yo',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Are you sleeping?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Watch this crazy stuff',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '3': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Oh man',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'You so mad',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Your task in this kata is to implement a function that calculates the sum of the integers inside a string. For example, in the string \"The30quick20brown10f0x1203jumps914ov3r1349the102l4zy dog\", the sum of the integers is 3635.',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '4': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'See you later',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Don\\'t forget about our business',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'I call you later',\n                            time: '22:02',\n                        },\n                    ],\n                },\n            },\n        },\n        navbar: {\n            friends: {\n                '0': {\n                    id: '0',\n                    name: 'John',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '1': {\n                    id: '1',\n                    name: 'Sara',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '2': {\n                    id: '2',\n                    name: 'George',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '3': {\n                    id: '3',\n                    name: 'Jinny',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '4': {\n                    id: '4',\n                    name: 'Harry',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n            },\n        },\n    },\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        console.log('state was changed')\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer // паттерн наблюдатель\n    },\n\n    dispatch(action) {\n        switch (action.type) {\n            case postsTypes.ADD_NEW_POST: // добавить новый пост на страницу профиля\n                const postsClone = clone(this._state.profile.posts.posts)\n                const newPost = {\n                    id: v1(),\n                    text: this._state.profile.posts.newPostText,\n                    time: new Date(),\n                    likes: 0,\n                }\n                this._state.profile.posts.posts = [newPost, ...postsClone]\n                this._state.profile.posts.newPostText = ''\n                this._callSubscriber()\n                break\n            case postsTypes.UPDATE_NEW_POST_TEXT: // изменить текст поста на странице профиля\n                this._state.profile.posts.newPostText = action.newText\n                this._callSubscriber()\n                break\n            case dialogsTypes.SELECT_DIALOG: // выбрать диалог\n                const messagesClone = clone(this._state.dialogs.userMessages[ action.id ])\n                this._state.dialogs.selectedMessages = messagesClone\n                this._state.dialogs.selectedDialog = action.id\n                this._callSubscriber()\n        }\n    },\n}","import React from 'react'\nimport s from './Avatar.module.css'\n\ninterface AvatarProps {\n    avatarUrl?: string\n    size?: 'small' | 'medium' | 'large'\n    shape?: 'square' | 'round'\n}\n\nconst getRandomColour = () => {\n    let rand = 0 - 0.5 + Math.random() * (255 - 0 + 1)\n    return Math.round(rand)\n}\n\nexport const Avatar:React.FC<AvatarProps> = (\n    {\n        avatarUrl,\n        size = 'medium',\n        shape = 'round'\n    }\n) => {\n    const background = avatarUrl ?\n        { backgroundImage: `url(${avatarUrl})` } :\n        { backgroundColor: `rgb(${getRandomColour()}, ${getRandomColour()}, ${getRandomColour()})` }\n\n    return (\n        <div\n            className={ [s.avatar, s[`${ size }`], s[`${ shape }`]].join(' ') }\n            style={ background }\n        ></div>\n    )\n}","import React from 'react'\nimport { UserTypes } from '../../../redux/state'\nimport s from './UserInfo.module.css'\nimport {Avatar} from \"../../Avatar/Avatar\";\n\n\n\ntype PropTypes = {\n    user: UserTypes\n}\n\nexport const UserInfo:React.FC<PropTypes> = ({ user }) => {\n    const {\n        avatar,\n        firstName,\n        lastName,\n        surName,\n        birthDate,\n        city,\n        education,\n        website\n    } = user\n    return (\n        <div className={ s.info }>\n            <Avatar avatarUrl={ avatar } shape='square' size='large' />\n            <div className={ s.description }>\n                <h2 className={ `${s.userInfo} ${s.userName}` }>{`${ firstName } ${ lastName } ${ surName }`}</h2>\n                <p className={ s.userInfo }>{ `Date of Birth: ${ birthDate }` }</p>\n                <p className={ s.userInfo }>{ `City: ${ city }` }</p>\n                <p className={ s.userInfo }>{ `Education: ${ education }` }</p>\n                <p className={ s.userInfo }>Web Site: <a className={ s.websiteLink } href={ website }>{ website }</a></p>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport s from './FormButton.module.css'\n\ninterface FormButtonProps {\n    primary?: boolean\n    value: string\n    size?: 'small' | 'medium' | 'large',\n    position?: 'start' | 'end' | 'center' | 'stretch'\n}\n\nexport const FormButton:React.FC<FormButtonProps> = (\n    {\n       primary = true,\n       value,\n       size = 'medium',\n       position = 'end'\n    }\n) => {\n    const mode = primary ? 'primary' : 'secondary'\n    return (\n        <input\n            className={[s.formButton, s[`${ mode }`], s[`${ size }`], s[`${ position }`]].join(' ')}\n            type=\"submit\"\n            value={ value }\n        />\n    )\n}","import React, { FormEvent, ChangeEvent, KeyboardEvent } from 'react'\nimport { FormButton } from '../../../FormButton/FormButton'\nimport s from './NewPost.module.css'\nimport { ActionType } from '../../../../redux/state'\nimport * as actions from '../../../../store/actions/posts'\n\n\ntype PropTypes = {\n    newPostText: string\n    dispatch: (action: ActionType) => void\n}\n\nexport const NewPost: React.FC<PropTypes> = (\n    {\n        newPostText, dispatch,\n    }) => {\n\n    const createNewPost = () => {\n        dispatch(actions.addNewPost())\n    }\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        createNewPost()\n    }\n    const onEnterPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            createNewPost()\n        }\n    }\n\n    const changePostTextHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        dispatch(actions.updateNewPostText(event.currentTarget.value))\n    }\n\n    return (\n        <form\n            className={ s.newPostContainer }\n            onSubmit={ submitHandler }\n        >\n            <textarea\n                className={ s.text }\n                rows={ 5 }\n                value={ newPostText }\n                placeholder=\"Write text...\"\n                onChange={ changePostTextHandler }\n                onKeyPress={ onEnterPressHandler }\n            />\n            <FormButton\n                value=\"Add post\"\n                position=\"end\"\n                primary={ true }\n                size=\"medium\"\n            />\n        </form>\n    )\n}","import * as types from '../types/posts'\n\nexport const updateNewPostText = (newText: string) => ({\n    type: types.UPDATE_NEW_POST_TEXT,\n    newText,\n} as const)\n\nexport const addNewPost = () => ({\n    type: types.ADD_NEW_POST,\n} as const)","import React from 'react'\nimport { Avatar } from '../../../Avatar/Avatar'\nimport s from './PostItem.module.css'\n\n\ntype PropTypes = {\n    avatarUrl: string\n    text: string\n    likes: number\n    time: Date\n}\n\nexport const PostItem: React.FC<PropTypes> = (\n    {\n        avatarUrl,\n        text,\n        time,\n        likes,\n    }) => {\n\n    const date = time.getDate()\n    const month = time.getMonth() + 1 > 9 ? time.getMonth() + 1 : `0${ time.getMonth() + 1 }`\n    const year = time.getFullYear()\n    const hours = time.getHours()\n    const minutes = time.getMinutes() > 9 ? time.getMinutes() : `0${ time.getMinutes() }`\n    const humanDate = `${ date }.${ month }.${ year } ${ hours }:${ minutes }`\n\n    return (\n        <section className={ s.postItem }>\n            <Avatar avatarUrl={ avatarUrl }/>\n            <div className={ s.container }>\n                <article className={ s.text }>{ text }</article>\n                <time\n                    className={ s.date }\n                    dateTime={ `${ time }` }\n                >\n                    { humanDate }\n                </time>\n                <span className={ s.reaction }>likes { likes }</span>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport { NewPost } from './NewPost/NewPost'\nimport { PostItem } from './PostItem/PostItem'\nimport { ActionType, PostsTypes } from '../../../redux/state'\nimport s from './Posts.module.css'\n\n\ntype PropTypes = {\n    avatar: string\n    userPosts: PostsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Posts: React.FC<PropTypes> = (\n    {\n        avatar, userPosts,\n        dispatch,\n    }) => {\n\n    const { posts, newPostText } = userPosts\n    const mappedPosts = posts.map((post) => (\n        <PostItem\n            avatarUrl={ avatar }\n            text={ post.text }\n            time={ post.time }\n            likes={ post.likes }\n            key={ post.id }\n        />\n    ))\n\n    return (\n        <div className={ s.postsContainer }>\n            <h2 className={ s.title }>My Posts</h2>\n            <NewPost\n                newPostText={ newPostText }\n                dispatch={ dispatch }\n            />\n            { mappedPosts }\n        </div>\n    )\n}","import React from 'react'\nimport { UserInfo } from './UserInfo/UserInfo'\nimport { ActionType, PostsTypes, UserTypes } from '../../redux/state'\nimport { Posts } from './Posts/Posts'\nimport s from './Profile.module.css'\n\n\ntype PropTypes = {\n    user: UserTypes\n    posts: PostsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Profile: React.FC<PropTypes> = (\n    {\n        user,\n        posts,\n        dispatch,\n    }) => {\n    return (\n        <main className={ s.profile }>\n            <div\n                className={ s.image }\n                style={ { backgroundImage: `url(${ user.background })` } }\n            ></div>\n            <UserInfo user={ user }/>\n            <Posts\n                avatar={ user.avatar }\n                userPosts={ posts }\n                dispatch={ dispatch }\n            />\n        </main>\n    )\n}","import React from 'react'\nimport { ActionType, ProfileTypes } from '../../redux/state'\nimport { Profile } from '../../components/Profile/Profile'\n\n\ntype PropTypes = {\n    profile: ProfileTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const ProfilePage: React.FC<PropTypes> = (\n    {\n        profile, dispatch,\n    }) => {\n    const { user, posts } = profile\n    return (\n        <>\n            <Profile\n                user={ user }\n                posts={ posts }\n                dispatch={ dispatch }\n            />\n        </>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from './Dialog.module.css'\nimport { ActionType, DialogTypes } from '../../../redux/state'\nimport { selectDialog } from '../../../store/actions/dialogs'\n\ntype PropTypes = {\n    dialog: DialogTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Dialog: React.FC<PropTypes> = (\n    {\n        dialog, dispatch,\n    }) => {\n    const itemClassName = `${ s.item }`\n    const onClickHandler = () => dispatch(selectDialog(dialog.id))\n\n    return (\n        <li\n            className={ itemClassName }\n            onClick={ onClickHandler }\n        >\n            <NavLink\n                className={ s.link }\n                to={ `/dialogs/${ dialog.id }` }\n                activeClassName={ s.active }\n            >\n                { dialog.name }\n            </NavLink>\n        </li>\n    )\n}","import * as types from '../types/dialogs'\n\nexport const selectDialog = (id: string) => ({\n    type: types.SELECT_DIALOG,\n    id,\n} as const)","import React  from 'react'\nimport { UserMessageTypes } from '../../../../redux/state'\nimport { Avatar } from '../../../Avatar/Avatar'\nimport s from './Message.module.css'\n\n\n\ntype PropTypes = {\n    message: UserMessageTypes\n}\n\nexport const Message: React.FC<PropTypes> = ({ message }) => {\n\n    return (\n        <div className={ s.itemContainer }>\n            <Avatar avatarUrl={message.avatar} size='small' shape='round' />\n            <div className={ s.messageContainer }>\n                <p className={ s.message }>{ message.message }</p>\n                <span className={ s.time }>{ message.time }</span>\n            </div>\n        </div>\n    )\n}\n","import React, { FormEvent, useRef } from 'react'\nimport s from './NewMessage.module.css'\nimport { FormButton } from '../../../FormButton/FormButton'\n\nexport const NewMessage = () => {\n    const messageRef = useRef<HTMLTextAreaElement>(null)\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const date = new Date()\n        console.log((messageRef.current as HTMLTextAreaElement).value)\n        console.log(date)\n    }\n\n    return (\n        <div className={ s.newMessageContainer }>\n            <form\n                className={ s.form }\n                onSubmit={ submitHandler }\n            >\n                <textarea\n                    ref={ messageRef }\n                    className={ s.newMessageText }\n                    rows={ 1 }\n                    placeholder=\"Write message...\"\n                />\n                <FormButton value=\"Send\" position=\"stretch\" primary={ true } size=\"medium\"/>\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport { UserMessageTypes } from '../../../redux/state'\nimport { Message } from './Message/Message'\nimport { NewMessage } from './NewMessage/NewMessage'\nimport s from './Messages.module.css'\n\n\ntype PropTypes = {\n    messages: Array<UserMessageTypes>\n}\n\nexport const Messages:React.FC<PropTypes> = ({ messages }) => {\n    const mappedMessages = messages.map((message:UserMessageTypes) => (\n        <Message\n            key={ message.id }\n            message={ message }\n        />\n    ))\n\n    return (\n        <div className={ s.messagesContainer }>\n            { mappedMessages }\n            <NewMessage />\n        </div>\n    )\n}","import React from 'react'\nimport { ActionType, DialogsTypes, DialogTypes } from '../../redux/state'\nimport { Dialog } from './Dialog/Dialog'\nimport { Messages } from './Messages/Messages'\nimport s from './Dialogs.module.css'\n\ntype PropTypes = {\n    dialogs: DialogsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Dialogs: React.FC<PropTypes> = (\n    {\n        dialogs, dispatch,\n    }) => {\n    const { userDialogs, selectedMessages } = dialogs\n\n    const mappedDialogs = userDialogs.map((dialog: DialogTypes) => (\n        <Dialog\n            dialog={ dialog }\n            dispatch={ dispatch }\n            key={ dialog.id }\n        />\n    ))\n\n    return (\n        <div className={ s.container }>\n            <div className={ s.dialogs }>\n                <ul className={ s.list }>\n                    { mappedDialogs }\n                </ul>\n            </div>\n            <div className={ s.messages }>\n                { selectedMessages ? <Messages messages={ selectedMessages.messages }/> : 'Select dialog' }\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { ActionType, DialogsTypes } from '../../redux/state'\nimport { Dialogs } from '../../components/Dialogs/Dialogs'\n\ntype PropTypes = {\n    dialogs: DialogsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const DialogsPage: React.FC<PropTypes> = ({ dialogs, dispatch }) => {\n    return (\n        <>\n            <Dialogs\n                dialogs={ dialogs }\n                dispatch={ dispatch }\n            />\n        </>\n    )\n}","import React from 'react'\n\nexport const NewsPage = () => {\n    return (\n        <>\n            NewsPage\n        </>\n    )\n}","import React from 'react'\n\nexport const MusicPage = () => {\n    return (\n        <>\n            MusicPage\n        </>\n    )\n}","import React from 'react'\n\nexport const SettingsPage = () => {\n    return (\n        <>\n            SettingsPage\n        </>\n    )\n}","import React from \"react\"\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return (\n        <header className={s.header}>\n            <img\n                className={s.image}\n                src=\"https://img.icons8.com/ios-filled/50/000000/logo.png\"\n                alt=\"logo\"\n            />\n            <h1>Такая-то сеть</h1>\n        </header>\n    )\n}","import React from 'react'\nimport { FriendTypes } from '../../../redux/state'\nimport { Avatar } from '../../Avatar/Avatar'\nimport s from './FriendItem.module.css'\n\ntype PropTypes = {\n    friend: FriendTypes\n}\n\nexport const FriendItem:React.FC<PropTypes> = ({ friend }) => {\n   const { name, avatar } = friend\n    return (\n        <div className={s.friendContainer}>\n            <span className={s.friendName}>{ name }</span>\n            <Avatar avatarUrl={ avatar } shape='round' size='medium' />\n        </div>\n    )\n}","import React from \"react\"\nimport { NavbarTypes } from '../../redux/state'\nimport { NavLink } from 'react-router-dom'\nimport { FriendItem } from './FriendItem/FriendItem'\nimport s from './NavBar.module.css'\n\n\n\ntype NavItemTypes = {\n    id: number\n    name: string\n}\ntype NavTypes = Array<NavItemTypes>\n\ntype PropTypes = {\n    navbar: NavbarTypes\n}\n\nconst nav: NavTypes = [\n    {id:0, name: 'Profile'},\n    {id:1, name: 'Dialogs'},\n    {id:2, name: 'News'},\n    {id:3, name: 'Music'},\n    {id:4, name: 'Settings'}\n]\n\nexport const NavBar:React.FC<PropTypes> = ({ navbar }) => {\n    const mappedNavigation = nav.map((item) => (\n            <div className={ s.item } key={ item.id }>\n                <NavLink\n                    to={`/${item.name.toLowerCase()}`}\n                    className={ s.link }\n                    activeClassName={s.active}\n                >{ item.name }</NavLink>\n            </div>\n    ))\n\n    const mappedFriends = Object.values(navbar.friends).map((friend) => (\n        <FriendItem\n            friend={ friend }\n            key={ friend.id }\n        />\n    ))\n\n\n    return (\n        <nav className={s.nav}>\n            { mappedNavigation }\n            <div className={s.friendsContainer}>\n                { mappedFriends }\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { StoreType } from './redux/state'\nimport { useRoutes } from './routes'\nimport { Header } from './components/Header/Header'\nimport { NavBar } from './components/NavBar/NavBar'\nimport './App.css'\n\nexport type AppTypes = {\n    store: StoreType\n}\n\nexport const App: React.FC<AppTypes> = (\n    {\n        store,\n    }) => {\n    const state = store.getState()\n    const { profile, dialogs, navbar } = state\n    const routes = useRoutes(profile, dialogs, store.dispatch.bind(store))\n    return (\n        <Router>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <NavBar navbar={ navbar }/>\n                { routes }\n            </div>\n        </Router>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { ProfileTypes, DialogsTypes, ActionType } from './redux/state'\nimport { ProfilePage } from './Pages/ProfilePage/ProfilePage'\nimport { DialogsPage } from './Pages/DialogsPage/DialogsPage'\nimport { NewsPage } from './Pages/NewsPage/NewsPage'\nimport { MusicPage } from './Pages/MusicPage/MusicPage'\nimport { SettingsPage } from './Pages/SettingsPage/SettingsPage'\n\nexport const useRoutes = (\n    profile: ProfileTypes,\n    dialogs: DialogsTypes,\n    dispatch: (action: ActionType) => void,\n) => {\n    return (\n        <Switch>\n            <Route path=\"/profile\">\n                <ProfilePage profile={ profile } dispatch={ dispatch }/>\n            </Route>\n            <Route path=\"/dialogs\">\n                <DialogsPage dialogs={ dialogs } dispatch={ dispatch }/>\n            </Route>\n            <Route path=\"/news\">\n                <NewsPage/>\n            </Route>\n            <Route path=\"/music\">\n                <MusicPage/>\n            </Route>\n            <Route path=\"/settings\">\n                <SettingsPage/>\n            </Route>\n            <Redirect to=\"/profile\"/>\n        </Switch>\n    )\n}","import './index.css'\nimport { store } from './redux/state'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { App } from './App'\n\nconst rerenderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                store={ store }\n            />\n        </React.StrictMode>,\n        document.getElementById('root'),\n    )\n}\nrerenderTree()\nstore.subscribe(rerenderTree)"],"sourceRoot":""}