{"version":3,"sources":["components/Profile/UserInfo/UserInfo.module.css","components/Profile/Posts/PostItem/PostItem.module.css","components/NavBar/NavBar.module.css","components/FormButton/FormButton.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Avatar/Avatar.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Messages/NewMessage/NewMessage.module.css","components/Profile/Posts/NewPost/NewPost.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/NavBar/FriendItem/FriendItem.module.css","components/Dialogs/Messages/Messages.module.css","store/types/posts.tsx","redux/state.ts","components/Avatar/Avatar.tsx","components/Profile/UserInfo/UserInfo.tsx","components/FormButton/FormButton.tsx","components/Profile/Posts/NewPost/NewPost.tsx","store/actions/posts.tsx","components/Profile/Posts/PostItem/PostItem.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Profile.tsx","Pages/ProfilePage/ProfilePage.tsx","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/NewMessage/NewMessage.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","Pages/DialogsPage/DialogsPage.tsx","Pages/NewsPage/NewsPage.tsx","Pages/MusicPage/MusicPage.tsx","Pages/SettingsPage/SettingsPage.tsx","components/Header/Header.tsx","components/NavBar/FriendItem/FriendItem.tsx","components/NavBar/NavBar.tsx","App.tsx","routes.tsx","index.tsx"],"names":["module","exports","UPDATE_NEW_POST_TEXT","ADD_NEW_POST","store","_state","profile","user","id","firstName","lastName","surName","avatar","background","birthDate","city","education","website","posts","userId","newPostText","text","time","Date","likes","dialogs","userDialogs","name","userMessages","messages","v1","message","navbar","friends","getState","this","_callSubscriber","console","log","subscribe","observer","dispatch","action","type","types","postsClone","clone","newPost","newText","getRandomColour","rand","Math","random","round","Avatar","avatarUrl","size","shape","backgroundImage","backgroundColor","className","s","join","style","UserInfo","info","description","userInfo","userName","websiteLink","href","FormButton","primary","value","position","mode","formButton","NewPost","createNewPost","newPostContainer","onSubmit","event","preventDefault","rows","placeholder","onChange","currentTarget","onKeyPress","key","PostItem","date","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","humanDate","postItem","container","dateTime","reaction","Posts","userPosts","mappedPosts","map","post","postsContainer","title","Profile","image","ProfilePage","Dialog","dialog","selectDialogCallback","item","onClick","link","to","activeClassName","active","Message","itemContainer","messageContainer","NewMessage","messageRef","useRef","newMessageContainer","form","current","ref","newMessageText","Messages","mappedMessages","messagesContainer","Dialogs","useState","setMessages","length","selectMessages","mappedDialogs","list","DialogsPage","NewsPage","MusicPage","SettingsPage","Header","header","src","alt","FriendItem","friend","friendContainer","friendName","nav","NavBar","mappedNavigation","toLowerCase","mappedFriends","Object","values","friendsContainer","App","state","routes","path","useRoutes","bind","rerenderTree","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be5045a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__2EQyR\",\"description\":\"UserInfo_description__14juR\",\"userName\":\"UserInfo_userName__11PxP\",\"userInfo\":\"UserInfo_userInfo__19Gg7\",\"websiteLink\":\"UserInfo_websiteLink__3D7ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"PostItem_postItem__cJGuU\",\"container\":\"PostItem_container__2JWlg\",\"title\":\"PostItem_title__3ciLf\",\"text\":\"PostItem_text__1-F9Y\",\"date\":\"PostItem_date__2_aLQ\",\"reaction\":\"PostItem_reaction__3faHJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\",\"link\":\"NavBar_link__2Iixg\",\"active\":\"NavBar_active__1HRI5\",\"friendsContainer\":\"NavBar_friendsContainer__3dQug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"FormButton_formButton__3Y9lb\",\"primary\":\"FormButton_primary__1Vw-K\",\"secondary\":\"FormButton_secondary__2WLr0\",\"start\":\"FormButton_start__oYJER\",\"center\":\"FormButton_center__2BNk0\",\"end\":\"FormButton_end__le1rA\",\"stretch\":\"FormButton_stretch__AiuYc\",\"small\":\"FormButton_small__3X9yO\",\"medium\":\"FormButton_medium__3A7Ff\",\"large\":\"FormButton_large__3YqLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Message_itemContainer__3Ogp1\",\"messageContainer\":\"Message_messageContainer__50BSK\",\"message\":\"Message_message__2XMh9\",\"time\":\"Message_time__R0PKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__2p0uA\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"list\":\"Dialogs_list__3m0__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2A8Ju\",\"round\":\"Avatar_round__2hSiZ\",\"square\":\"Avatar_square__3sTiD\",\"small\":\"Avatar_small__3X69T\",\"medium\":\"Avatar_medium__1gMp0\",\"large\":\"Avatar_large__ou5Nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2jaF4\",\"link\":\"Dialog_link__2CIRa\",\"active\":\"Dialog_active__2fc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageContainer\":\"NewMessage_newMessageContainer__O9LOI\",\"form\":\"NewMessage_form__1LYM4\",\"newMessageText\":\"NewMessage_newMessageText__1H5T9\",\"button\":\"NewMessage_button__YNSf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostContainer\":\"NewPost_newPostContainer__1vaC7\",\"title\":\"NewPost_title__2nRLX\",\"text\":\"NewPost_text__1eobX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"Posts_postsContainer__3fBmN\",\"title\":\"Posts_title__23BoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"image\":\"Profile_image__2MW_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"image\":\"Header_image__1zcEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"FriendItem_friendContainer__312yD\",\"friendName\":\"FriendItem_friendName__1VsdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3RCBn\"};","export const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\nexport const ADD_NEW_POST = 'ADD-NEW-POST'","import { v1 } from 'uuid'\nimport clone from 'clone-deep'\nimport * as types from '../store/types/posts'\nimport * as actions from '../store/actions/posts'\n// TS\nexport type UserTypes = {\n    id: string\n    firstName: string\n    lastName: string\n    surName: string\n    avatar: string\n    background: string\n    birthDate: string\n    city: string\n    education: string\n    website: string\n}\n\nexport type PostTypes = {\n    id: string\n    text: string\n    time: Date\n    likes: number\n}\n\nexport type PostsTypes = {\n    userId: string\n    newPostText: string\n    posts: Array<PostTypes>\n}\n\nexport type ProfileTypes = {\n    user: UserTypes\n    posts: PostsTypes\n}\n\nexport type DialogTypes = {\n    id: string\n    name: string\n}\n\nexport type UserMessageTypes = {\n    id: string\n    avatar: string\n    message: string\n    time: string\n}\n\nexport type UsersMessagesTypes = {\n    [ key: string ]: { messages: Array<UserMessageTypes> }\n}\n\nexport type DialogsTypes = {\n    userDialogs: Array<DialogTypes>\n    userMessages: UsersMessagesTypes\n}\n\nexport type FriendTypes = {\n    id: string\n    name: string\n    avatar: string\n}\n\nexport type FriendsTypes = {\n    [ key: string ]: FriendTypes\n}\n\nexport type NavbarTypes = {\n    friends: FriendsTypes\n}\n\nexport type StateTypes = {\n    profile: ProfileTypes\n    dialogs: DialogsTypes\n    navbar: NavbarTypes\n}\n\nexport type UpdateNewPostTextType = ReturnType<typeof actions.updateNewPostText>\nexport type AddNewPostType = ReturnType<typeof actions.addNewPost>\nexport type ActionType = AddNewPostType | UpdateNewPostTextType\n\nexport type StoreType = {\n    _state: StateTypes\n    _callSubscriber: () => void\n    getState: () => StateTypes\n    subscribe: (observer: () => void) => void\n    dispatch: (action: ActionType) => void\n}\n\n// Post Function\nexport const store: StoreType = {\n    _state: {\n        profile: {\n            user: {\n                id: '0',\n                firstName: 'John',\n                lastName: 'Dou',\n                surName: '',\n                avatar: 'https://ichef.bbci.co.uk/news/976/cpsprodpb/A7E9/production/_118158924_gettyimages-507245091.jpg',\n                background: 'https://st.depositphotos.com/1522993/4737/v/950/depositphotos_47372005-stock-illustration-orange-blue-background-with-triagles.jpg',\n                birthDate: '2 January 2000',\n                city: 'Minsk',\n                education: 'BSU\\'11',\n                website: 'https://it-kamasutra.com',\n            },\n            posts: {\n                userId: '0',\n                newPostText: '',\n                posts: [\n                    {\n                        id: 'ccc',\n                        text: 'В новой записи вы решили уточнить точное время дня (а точнее ночи), когда именно была сделана запись. Строку со временем можно оставить просто текстом, но есть вариант получше. В HTML есть специальный тег для разметки даты и времени',\n                        time: new Date(`2021-07-18T15:07:55.582Z`),\n                        likes: 3,\n\n                    },\n                    {\n                        id: 'vvv',\n                        text: 'Инструменты для статической типизации, такие как Flow или TypeScript, позволяют отлавливать большую часть ошибок ещё до исполнения кода. Кроме того, они существенно улучшают процессы разработки, добавляя автодополнение и другие возможности. Для приложений с большой кодовой базой мы рекомендуем использовать Flow или TypeScript вместо PropTypes.',\n                        time: new Date(`2021-07-18T18:07:13.943Z`),\n                        likes: 20,\n                    },\n                    {\n                        id: 'lll',\n                        text: 'Flow — это библиотека для статической типизации JavaScript, разработанная в Facebook и часто применяемая в связке с React. Flow расширяет возможности JavaScript, добавляя аннотации типов для переменных, функций и React-компонентов.',\n                        time: new Date(`2021-07-18T18:38:10.515Z`),\n                        likes: 11,\n                    },\n                ],\n            },\n        },\n        dialogs: {\n            userDialogs: [\n                {\n                    id: '0',\n                    name: 'John',\n                },\n                {\n                    id: '1',\n                    name: 'Sara',\n                },\n                {\n                    id: '2',\n                    name: 'George',\n                },\n                {\n                    id: '3',\n                    name: 'Jinny',\n                },\n                {\n                    id: '4',\n                    name: 'Harry',\n                },\n            ],\n            userMessages: {\n                '0': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Hi',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'How are you?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'What are you doing now?',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '1': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Hello',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Do you wanna go for walks?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Let\\'s meet at five',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '2': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Yo',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Are you sleeping?',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Watch this crazy stuff',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '3': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Oh man',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'You so mad',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Your task in this kata is to implement a function that calculates the sum of the integers inside a string. For example, in the string \"The30quick20brown10f0x1203jumps914ov3r1349the102l4zy dog\", the sum of the integers is 3635.',\n                            time: '22:02',\n                        },\n                    ],\n                },\n                '4': {\n                    messages: [\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'See you later',\n                            time: '22:00',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'Don\\'t forget about our business',\n                            time: '22:01',\n                        },\n                        {\n                            id: v1(),\n                            avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                            message: 'I call you later',\n                            time: '22:02',\n                        },\n                    ],\n                },\n            },\n        },\n        navbar: {\n            friends: {\n                '0': {\n                    id: '0',\n                    name: 'John',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '1': {\n                    id: '1',\n                    name: 'Sara',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '2': {\n                    id: '2',\n                    name: 'George',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '3': {\n                    id: '3',\n                    name: 'Jinny',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n                '4': {\n                    id: '4',\n                    name: 'Harry',\n                    avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n                },\n            },\n        },\n    },\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        console.log('state was changed')\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer // паттерн наблюдатель\n    },\n\n    dispatch(action) {\n        switch (action.type) {\n            case types.ADD_NEW_POST: // добавить новый пост на страницу профиля\n                const postsClone = clone(this._state.profile.posts.posts)\n                const newPost = {\n                    id: v1(),\n                    text: this._state.profile.posts.newPostText,\n                    time: new Date(),\n                    likes: 0,\n                }\n                this._state.profile.posts.posts = [newPost, ...postsClone]\n                this._state.profile.posts.newPostText = ''\n                this._callSubscriber()\n                break\n            case types.UPDATE_NEW_POST_TEXT: // изменить текст поста на странице профиля\n                if (action.newText) this._state.profile.posts.newPostText = action.newText\n                this._callSubscriber()\n                break\n        }\n    },\n}","import React from 'react'\nimport s from './Avatar.module.css'\n\ninterface AvatarProps {\n    avatarUrl?: string\n    size?: 'small' | 'medium' | 'large'\n    shape?: 'square' | 'round'\n}\n\nconst getRandomColour = () => {\n    let rand = 0 - 0.5 + Math.random() * (255 - 0 + 1)\n    return Math.round(rand)\n}\n\nexport const Avatar:React.FC<AvatarProps> = (\n    {\n        avatarUrl,\n        size = 'medium',\n        shape = 'round'\n    }\n) => {\n    const background = avatarUrl ?\n        { backgroundImage: `url(${avatarUrl})` } :\n        { backgroundColor: `rgb(${getRandomColour()}, ${getRandomColour()}, ${getRandomColour()})` }\n\n    return (\n        <div\n            className={ [s.avatar, s[`${ size }`], s[`${ shape }`]].join(' ') }\n            style={ background }\n        ></div>\n    )\n}","import React from 'react'\nimport { UserTypes } from '../../../redux/state'\nimport s from './UserInfo.module.css'\nimport {Avatar} from \"../../Avatar/Avatar\";\n\n\n\ntype PropTypes = {\n    user: UserTypes\n}\n\nexport const UserInfo:React.FC<PropTypes> = ({ user }) => {\n    const {\n        avatar,\n        firstName,\n        lastName,\n        surName,\n        birthDate,\n        city,\n        education,\n        website\n    } = user\n    return (\n        <div className={ s.info }>\n            <Avatar avatarUrl={ avatar } shape='square' size='large' />\n            <div className={ s.description }>\n                <h2 className={ `${s.userInfo} ${s.userName}` }>{`${ firstName } ${ lastName } ${ surName }`}</h2>\n                <p className={ s.userInfo }>{ `Date of Birth: ${ birthDate }` }</p>\n                <p className={ s.userInfo }>{ `City: ${ city }` }</p>\n                <p className={ s.userInfo }>{ `Education: ${ education }` }</p>\n                <p className={ s.userInfo }>Web Site: <a className={ s.websiteLink } href={ website }>{ website }</a></p>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport s from './FormButton.module.css'\n\ninterface FormButtonProps {\n    primary?: boolean\n    value: string\n    size?: 'small' | 'medium' | 'large',\n    position?: 'start' | 'end' | 'center' | 'stretch'\n}\n\nexport const FormButton:React.FC<FormButtonProps> = (\n    {\n       primary = true,\n       value,\n       size = 'medium',\n       position = 'end'\n    }\n) => {\n    const mode = primary ? 'primary' : 'secondary'\n    return (\n        <input\n            className={[s.formButton, s[`${ mode }`], s[`${ size }`], s[`${ position }`]].join(' ')}\n            type=\"submit\"\n            value={ value }\n        />\n    )\n}","import React, { FormEvent, ChangeEvent, KeyboardEvent } from 'react'\nimport { FormButton } from '../../../FormButton/FormButton'\nimport s from './NewPost.module.css'\nimport { ActionType } from '../../../../redux/state'\nimport * as actions from '../../../../store/actions/posts'\n\n\ntype PropTypes = {\n    newPostText: string\n    dispatch: (action: ActionType) => void\n}\n\nexport const NewPost: React.FC<PropTypes> = (\n    {\n        newPostText, dispatch,\n    }) => {\n\n    const createNewPost = () => {\n        dispatch(actions.addNewPost())\n    }\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        createNewPost()\n    }\n    const onEnterPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            createNewPost()\n        }\n    }\n\n    const changePostTextHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        dispatch(actions.updateNewPostText(event.currentTarget.value))\n    }\n\n    return (\n        <form\n            className={ s.newPostContainer }\n            onSubmit={ submitHandler }\n        >\n            <textarea\n                className={ s.text }\n                rows={ 5 }\n                value={ newPostText }\n                placeholder=\"Write text...\"\n                onChange={ changePostTextHandler }\n                onKeyPress={ onEnterPressHandler }\n            />\n            <FormButton\n                value=\"Add post\"\n                position=\"end\"\n                primary={ true }\n                size=\"medium\"\n            />\n        </form>\n    )\n}","import * as types from '../types/posts'\n\nexport const updateNewPostText = (newText: string) => ({\n    type: types.UPDATE_NEW_POST_TEXT,\n    newText,\n} as const)\n\nexport const addNewPost = () => ({\n    type: types.ADD_NEW_POST,\n} as const)","import React from 'react'\nimport { Avatar } from '../../../Avatar/Avatar'\nimport s from './PostItem.module.css'\n\n\ntype PropTypes = {\n    avatarUrl: string\n    text: string\n    likes: number\n    time: Date\n}\n\nexport const PostItem: React.FC<PropTypes> = (\n    {\n        avatarUrl,\n        text,\n        time,\n        likes,\n    }) => {\n\n    const date = time.getDate()\n    const month = time.getMonth() + 1 > 9 ? time.getMonth() + 1 : `0${ time.getMonth() + 1 }`\n    const year = time.getFullYear()\n    const hours = time.getHours()\n    const minutes = time.getMinutes() > 9 ? time.getMinutes() : `0${ time.getMinutes() }`\n    const humanDate = `${ date }.${ month }.${ year } ${ hours }:${ minutes }`\n\n    return (\n        <section className={ s.postItem }>\n            <Avatar avatarUrl={ avatarUrl }/>\n            <div className={ s.container }>\n                <article className={ s.text }>{ text }</article>\n                <time\n                    className={ s.date }\n                    dateTime={ `${ time }` }\n                >\n                    { humanDate }\n                </time>\n                <span className={ s.reaction }>likes { likes }</span>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport { NewPost } from './NewPost/NewPost'\nimport { PostItem } from './PostItem/PostItem'\nimport { ActionType, PostsTypes } from '../../../redux/state'\nimport s from './Posts.module.css'\n\n\ntype PropTypes = {\n    avatar: string\n    userPosts: PostsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Posts: React.FC<PropTypes> = (\n    {\n        avatar, userPosts,\n        dispatch,\n    }) => {\n\n    const { posts, newPostText } = userPosts\n    const mappedPosts = posts.map((post) => (\n        <PostItem\n            avatarUrl={ avatar }\n            text={ post.text }\n            time={ post.time }\n            likes={ post.likes }\n            key={ post.id }\n        />\n    ))\n\n    return (\n        <div className={ s.postsContainer }>\n            <h2 className={ s.title }>My Posts</h2>\n            <NewPost\n                newPostText={ newPostText }\n                dispatch={ dispatch }\n            />\n            { mappedPosts }\n        </div>\n    )\n}","import React from 'react'\nimport { UserInfo } from './UserInfo/UserInfo'\nimport { ActionType, PostsTypes, UserTypes } from '../../redux/state'\nimport { Posts } from './Posts/Posts'\nimport s from './Profile.module.css'\n\n\ntype PropTypes = {\n    user: UserTypes\n    posts: PostsTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const Profile: React.FC<PropTypes> = (\n    {\n        user,\n        posts,\n        dispatch,\n    }) => {\n    return (\n        <main className={ s.profile }>\n            <div\n                className={ s.image }\n                style={ { backgroundImage: `url(${ user.background })` } }\n            ></div>\n            <UserInfo user={ user }/>\n            <Posts\n                avatar={ user.avatar }\n                userPosts={ posts }\n                dispatch={ dispatch }\n            />\n        </main>\n    )\n}","import React from 'react'\nimport { ActionType, ProfileTypes } from '../../redux/state'\nimport { Profile } from '../../components/Profile/Profile'\n\n\ntype PropTypes = {\n    profile: ProfileTypes\n    dispatch: (action: ActionType) => void\n}\n\nexport const ProfilePage: React.FC<PropTypes> = (\n    {\n        profile, dispatch,\n    }) => {\n    const { user, posts } = profile\n    return (\n        <>\n            <Profile\n                user={ user }\n                posts={ posts }\n                dispatch={ dispatch }\n            />\n        </>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from './Dialog.module.css'\nimport { DialogTypes } from '../../../redux/state'\n\ntype PropTypes = {\n    dialog: DialogTypes\n    selectDialogCallback: (id: string) => void\n}\n\nexport const Dialog:React.FC<PropTypes> = ({ dialog, selectDialogCallback }) => {\n\n    const onClickHandler = () => {\n        selectDialogCallback(dialog.id)\n    }\n\n    return (\n        <li\n            className={ s.item }\n            onClick={ onClickHandler }\n        >\n            <NavLink\n                className={ s.link }\n                to={`/dialogs/${dialog.id}`}\n                activeClassName={s.active}\n            >\n                { dialog.name }\n            </NavLink>\n        </li>\n    )\n}","import React  from 'react'\nimport { UserMessageTypes } from '../../../../redux/state'\nimport { Avatar } from '../../../Avatar/Avatar'\nimport s from './Message.module.css'\n\n\n\ntype PropTypes = {\n    message: UserMessageTypes\n}\n\nexport const Message: React.FC<PropTypes> = ({ message }) => {\n\n    return (\n        <div className={ s.itemContainer }>\n            <Avatar avatarUrl={message.avatar} size='small' shape='round' />\n            <div className={ s.messageContainer }>\n                <p className={ s.message }>{ message.message }</p>\n                <span className={ s.time }>{ message.time }</span>\n            </div>\n        </div>\n    )\n}\n","import React, { FormEvent, useRef } from 'react'\nimport s from './NewMessage.module.css'\nimport { FormButton } from '../../../FormButton/FormButton'\n\nexport const NewMessage = () => {\n    const messageRef = useRef<HTMLTextAreaElement>(null)\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const date = new Date()\n        console.log((messageRef.current as HTMLTextAreaElement).value)\n        console.log(date)\n    }\n\n    return (\n        <div className={ s.newMessageContainer }>\n            <form\n                className={ s.form }\n                onSubmit={ submitHandler }\n            >\n                <textarea\n                    ref={ messageRef }\n                    className={ s.newMessageText }\n                    rows={ 1 }\n                    placeholder=\"Write message...\"\n                />\n                <FormButton value=\"Send\" position=\"stretch\" primary={ true } size=\"medium\"/>\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport { UserMessageTypes } from '../../../redux/state'\nimport { Message } from './Message/Message'\nimport { NewMessage } from './NewMessage/NewMessage'\nimport s from './Messages.module.css'\n\n\ntype PropTypes = {\n    messages: Array<UserMessageTypes>\n}\n\nexport const Messages:React.FC<PropTypes> = ({ messages }) => {\n    const mappedMessages = messages.map((message:UserMessageTypes) => (\n        <Message\n            key={ message.id }\n            message={ message }\n        />\n    ))\n\n    return (\n        <div className={ s.messagesContainer }>\n            { mappedMessages }\n            <NewMessage />\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DialogTypes, UserMessageTypes, UsersMessagesTypes } from '../../redux/state'\nimport { Dialog } from './Dialog/Dialog'\nimport { Messages } from './Messages/Messages'\nimport s from './Dialogs.module.css'\n\ntype PropTypes = {\n    userDialogs: Array<DialogTypes>\n    userMessages: UsersMessagesTypes\n}\n\nconst selectMessages = (id: string, userMessages: UsersMessagesTypes): Array<UserMessageTypes> | null => {\n    const { messages } = userMessages[`${id}`]\n    return messages && messages.length ? messages : null\n}\n\nexport const Dialogs:React.FC<PropTypes> = ({ userDialogs, userMessages }) => {\n    const [messages, setMessages] = useState<Array<UserMessageTypes> | null>(null)\n    const selectDialogCallback = (id: string) => setMessages(() => selectMessages(id, userMessages))\n\n    const mappedDialogs = userDialogs.map((dialog: DialogTypes) => (\n        <Dialog\n            dialog={ dialog }\n            selectDialogCallback={ selectDialogCallback }\n            key={ dialog.id }\n        />\n    ))\n\n    return (\n        <div className={s.container}>\n            <div className={s.dialogs}>\n                <ul className={s.list}>\n                    { mappedDialogs }\n                </ul>\n            </div>\n            <div className={ s.messages }>\n                { messages ? <Messages messages={ messages }/> : 'Select dialog' }\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { DialogsTypes } from '../../redux/state'\nimport { Dialogs } from '../../components/Dialogs/Dialogs'\n\ntype PropTypes = {\n    dialogs: DialogsTypes\n}\n\nexport const DialogsPage:React.FC<PropTypes> = ({ dialogs }) => {\n    const { userDialogs, userMessages } = dialogs\n    return (\n        <>\n            <Dialogs userDialogs={ userDialogs } userMessages={ userMessages }/>\n        </>\n    )\n}","import React from 'react'\n\nexport const NewsPage = () => {\n    return (\n        <>\n            NewsPage\n        </>\n    )\n}","import React from 'react'\n\nexport const MusicPage = () => {\n    return (\n        <>\n            MusicPage\n        </>\n    )\n}","import React from 'react'\n\nexport const SettingsPage = () => {\n    return (\n        <>\n            SettingsPage\n        </>\n    )\n}","import React from \"react\"\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return (\n        <header className={s.header}>\n            <img\n                className={s.image}\n                src=\"https://img.icons8.com/ios-filled/50/000000/logo.png\"\n                alt=\"logo\"\n            />\n            <h1>Такая-то сеть</h1>\n        </header>\n    )\n}","import React from 'react'\nimport { FriendTypes } from '../../../redux/state'\nimport { Avatar } from '../../Avatar/Avatar'\nimport s from './FriendItem.module.css'\n\ntype PropTypes = {\n    friend: FriendTypes\n}\n\nexport const FriendItem:React.FC<PropTypes> = ({ friend }) => {\n   const { name, avatar } = friend\n    return (\n        <div className={s.friendContainer}>\n            <span className={s.friendName}>{ name }</span>\n            <Avatar avatarUrl={ avatar } shape='round' size='medium' />\n        </div>\n    )\n}","import React from \"react\"\nimport { NavbarTypes } from '../../redux/state'\nimport { NavLink } from 'react-router-dom'\nimport { FriendItem } from './FriendItem/FriendItem'\nimport s from './NavBar.module.css'\n\n\n\ntype NavItemTypes = {\n    id: number\n    name: string\n}\ntype NavTypes = Array<NavItemTypes>\n\ntype PropTypes = {\n    navbar: NavbarTypes\n}\n\nconst nav: NavTypes = [\n    {id:0, name: 'Profile'},\n    {id:1, name: 'Dialogs'},\n    {id:2, name: 'News'},\n    {id:3, name: 'Music'},\n    {id:4, name: 'Settings'}\n]\n\nexport const NavBar:React.FC<PropTypes> = ({ navbar }) => {\n    const mappedNavigation = nav.map((item) => (\n            <div className={ s.item } key={ item.id }>\n                <NavLink\n                    to={`/${item.name.toLowerCase()}`}\n                    className={ s.link }\n                    activeClassName={s.active}\n                >{ item.name }</NavLink>\n            </div>\n    ))\n\n    const mappedFriends = Object.values(navbar.friends).map((friend) => (\n        <FriendItem\n            friend={ friend }\n            key={ friend.id }\n        />\n    ))\n\n\n    return (\n        <nav className={s.nav}>\n            { mappedNavigation }\n            <div className={s.friendsContainer}>\n                { mappedFriends }\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { StoreType } from './redux/state'\nimport { useRoutes } from './routes'\nimport { Header } from './components/Header/Header'\nimport { NavBar } from './components/NavBar/NavBar'\nimport './App.css'\n\nexport type AppTypes = {\n    store: StoreType\n}\n\nexport const App: React.FC<AppTypes> = (\n    {\n        store,\n    }) => {\n    const state = store.getState()\n    const { profile, dialogs, navbar } = state\n    const routes = useRoutes(profile, dialogs, store.dispatch.bind(store))\n    return (\n        <Router>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <NavBar navbar={ navbar }/>\n                { routes }\n            </div>\n        </Router>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { ProfileTypes, DialogsTypes, ActionType } from './redux/state'\nimport { ProfilePage } from './Pages/ProfilePage/ProfilePage'\nimport { DialogsPage } from './Pages/DialogsPage/DialogsPage'\nimport { NewsPage } from './Pages/NewsPage/NewsPage'\nimport { MusicPage } from './Pages/MusicPage/MusicPage'\nimport { SettingsPage } from './Pages/SettingsPage/SettingsPage'\n\nexport const useRoutes = (\n    profile: ProfileTypes,\n    dialogs: DialogsTypes,\n    dispatch: (action: ActionType) => void,\n) => {\n    return (\n        <Switch>\n            <Route path=\"/profile\">\n                <ProfilePage profile={ profile } dispatch={ dispatch }/>\n            </Route>\n            <Route path=\"/dialogs\">\n                <DialogsPage dialogs={ dialogs }/>\n            </Route>\n            <Route path=\"/news\">\n                <NewsPage/>\n            </Route>\n            <Route path=\"/music\">\n                <MusicPage/>\n            </Route>\n            <Route path=\"/settings\">\n                <SettingsPage/>\n            </Route>\n            <Redirect to=\"/profile\"/>\n        </Switch>\n    )\n}","import './index.css'\nimport { store } from './redux/state'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { App } from './App'\n\nconst rerenderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                store={ store }\n            />\n        </React.StrictMode>,\n        document.getElementById('root'),\n    )\n}\nrerenderTree()\nstore.subscribe(rerenderTree)"],"sourceRoot":""}