{"version":3,"sources":["components/Profile/UserInfo/UserInfo.module.css","components/Profile/PostItem/PostItem.module.css","components/NavBar/NavBar.module.css","components/FormButton/FormButton.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Avatar/Avatar.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Messages/NewMessage/NewMessage.module.css","components/Profile/NewPost/NewPost.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/NavBar/FriendItem/FriendItem.module.css","components/Dialogs/Messages/Messages.module.css","reportWebVitals.ts","components/Avatar/Avatar.tsx","components/Profile/UserInfo/UserInfo.tsx","components/FormButton/FormButton.tsx","redux/state.ts","components/Profile/NewPost/NewPost.tsx","components/Profile/PostItem/PostItem.tsx","components/Profile/Posts/Posts.tsx","components/Profile/Profile.tsx","Pages/ProfilePage/ProfilePage.tsx","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/Messages/NewMessage/NewMessage.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","Pages/DialogsPage/DialogsPage.tsx","Pages/NewsPage/NewsPage.tsx","Pages/MusicPage/MusicPage.tsx","Pages/SettingsPage/SettingsPage.tsx","components/Header/Header.tsx","components/NavBar/FriendItem/FriendItem.tsx","components/NavBar/NavBar.tsx","App.tsx","routes.tsx","render.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getRandomColour","rand","Math","random","round","Avatar","avatarUrl","size","shape","background","backgroundImage","backgroundColor","className","s","avatar","join","style","UserInfo","user","firstName","lastName","surName","birthDate","city","education","website","info","description","userInfo","userName","websiteLink","href","FormButton","primary","value","position","mode","formButton","type","addNewPost","postsClone","clone","state","profile","posts","newPost","id","v1","text","newPostText","time","Date","likes","rerenderTree","userId","dialogs","userDialogs","name","userMessages","messages","message","navbar","friends","NewPost","createNewPost","newPostContainer","onSubmit","event","preventDefault","rows","placeholder","onChange","newText","currentTarget","onKeyPress","key","PostItem","date","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","humanDate","postItem","container","dateTime","reaction","Posts","userPosts","mappedPosts","map","post","postsContainer","title","Profile","image","ProfilePage","Dialog","dialog","selectDialogCallback","item","onClick","link","to","activeClassName","active","Message","itemContainer","messageContainer","NewMessage","messageRef","useRef","newMessageContainer","form","console","log","current","ref","newMessageText","Messages","mappedMessages","messagesContainer","Dialogs","useState","setMessages","length","selectMessages","mappedDialogs","list","DialogsPage","NewsPage","MusicPage","SettingsPage","Header","header","src","alt","FriendItem","friend","friendContainer","friendName","nav","NavBar","mappedNavigation","idx","toLowerCase","mappedFriends","Object","values","friendsContainer","App","routes","path","useRoutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b4f199a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__2EQyR\",\"description\":\"UserInfo_description__14juR\",\"userName\":\"UserInfo_userName__11PxP\",\"userInfo\":\"UserInfo_userInfo__19Gg7\",\"websiteLink\":\"UserInfo_websiteLink__3D7ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"PostItem_postItem__z862_\",\"container\":\"PostItem_container__Uh48h\",\"title\":\"PostItem_title__3z0QY\",\"text\":\"PostItem_text__1Pugs\",\"date\":\"PostItem_date__2zvQE\",\"reaction\":\"PostItem_reaction__2BLM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\",\"link\":\"NavBar_link__2Iixg\",\"active\":\"NavBar_active__1HRI5\",\"friendsContainer\":\"NavBar_friendsContainer__3dQug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"FormButton_formButton__3Y9lb\",\"primary\":\"FormButton_primary__1Vw-K\",\"secondary\":\"FormButton_secondary__2WLr0\",\"start\":\"FormButton_start__oYJER\",\"center\":\"FormButton_center__2BNk0\",\"end\":\"FormButton_end__le1rA\",\"stretch\":\"FormButton_stretch__AiuYc\",\"small\":\"FormButton_small__3X9yO\",\"medium\":\"FormButton_medium__3A7Ff\",\"large\":\"FormButton_large__3YqLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Message_itemContainer__3Ogp1\",\"messageContainer\":\"Message_messageContainer__50BSK\",\"message\":\"Message_message__2XMh9\",\"time\":\"Message_time__R0PKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__2p0uA\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"list\":\"Dialogs_list__3m0__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2A8Ju\",\"round\":\"Avatar_round__2hSiZ\",\"square\":\"Avatar_square__3sTiD\",\"small\":\"Avatar_small__3X69T\",\"medium\":\"Avatar_medium__1gMp0\",\"large\":\"Avatar_large__ou5Nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2jaF4\",\"link\":\"Dialog_link__2CIRa\",\"active\":\"Dialog_active__2fc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessageContainer\":\"NewMessage_newMessageContainer__O9LOI\",\"form\":\"NewMessage_form__1LYM4\",\"newMessageText\":\"NewMessage_newMessageText__1H5T9\",\"button\":\"NewMessage_button__YNSf_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostContainer\":\"NewPost_newPostContainer__3F5Vb\",\"title\":\"NewPost_title__3f6c6\",\"text\":\"NewPost_text__3n-U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"Posts_postsContainer__3fBmN\",\"title\":\"Posts_title__23BoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"image\":\"Profile_image__2MW_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"image\":\"Header_image__1zcEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"FriendItem_friendContainer__312yD\",\"friendName\":\"FriendItem_friendName__1VsdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3RCBn\"};","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react'\nimport s from './Avatar.module.css'\n\ninterface AvatarProps {\n    avatarUrl?: string\n    size?: 'small' | 'medium' | 'large'\n    shape?: 'square' | 'round'\n}\n\nconst getRandomColour = () => {\n    let rand = 0 - 0.5 + Math.random() * (255 - 0 + 1)\n    return Math.round(rand)\n}\n\nexport const Avatar:React.FC<AvatarProps> = (\n    {\n        avatarUrl,\n        size = 'medium',\n        shape = 'round'\n    }\n) => {\n    const background = avatarUrl ?\n        { backgroundImage: `url(${avatarUrl})` } :\n        { backgroundColor: `rgb(${getRandomColour()}, ${getRandomColour()}, ${getRandomColour()})` }\n\n    return (\n        <div\n            className={ [s.avatar, s[`${ size }`], s[`${ shape }`]].join(' ') }\n            style={ background }\n        ></div>\n    )\n}","import React from 'react'\nimport { UserTypes } from '../../../redux/state'\nimport s from './UserInfo.module.css'\nimport {Avatar} from \"../../Avatar/Avatar\";\n\n\n\ntype PropTypes = {\n    user: UserTypes\n}\n\nexport const UserInfo:React.FC<PropTypes> = ({ user }) => {\n    const {\n        avatar,\n        firstName,\n        lastName,\n        surName,\n        birthDate,\n        city,\n        education,\n        website\n    } = user\n    return (\n        <div className={ s.info }>\n            <Avatar avatarUrl={ avatar } shape='square' size='large' />\n            <div className={ s.description }>\n                <h2 className={ `${s.userInfo} ${s.userName}` }>{`${ firstName } ${ lastName } ${ surName }`}</h2>\n                <p className={ s.userInfo }>{ `Date of Birth: ${ birthDate }` }</p>\n                <p className={ s.userInfo }>{ `City: ${ city }` }</p>\n                <p className={ s.userInfo }>{ `Education: ${ education }` }</p>\n                <p className={ s.userInfo }>Web Site: <a className={ s.websiteLink } href={ website }>{ website }</a></p>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport s from './FormButton.module.css'\n\ninterface FormButtonProps {\n    primary?: boolean\n    value: string\n    size?: 'small' | 'medium' | 'large',\n    position?: 'start' | 'end' | 'center' | 'stretch'\n}\n\nexport const FormButton:React.FC<FormButtonProps> = (\n    {\n       primary = true,\n       value,\n       size = 'medium',\n       position = 'end'\n    }\n) => {\n    const mode = primary ? 'primary' : 'secondary'\n    return (\n        <input\n            className={[s.formButton, s[`${ mode }`], s[`${ size }`], s[`${ position }`]].join(' ')}\n            type=\"submit\"\n            value={ value }\n        />\n    )\n}","import { v1 } from 'uuid'\nimport clone from 'clone-deep'\nimport { rerenderTree } from '../render'\n\n// types\n\nexport type UserTypes = {\n    id: string\n    firstName: string\n    lastName: string\n    surName: string\n    avatar: string\n    background: string\n    birthDate: string\n    city: string\n    education: string\n    website: string\n}\n\nexport type PostTypes = {\n    id: string\n    text: string\n    time: Date\n    likes: number\n}\n\nexport type PostsTypes = {\n    userId: string\n    newPostText: string\n    posts: Array<PostTypes>\n}\n\nexport type ProfileTypes = {\n    user: UserTypes\n    posts: PostsTypes\n}\n\nexport type DialogTypes = {\n    id: string\n    name: string\n}\n\nexport type UserMessageTypes = {\n    id: string\n    avatar: string\n    message: string\n    time: string\n}\n\nexport type UsersMessagesTypes = {\n    [key: string]: { messages: Array<UserMessageTypes> }\n}\n\nexport type DialogsTypes = {\n    userDialogs: Array<DialogTypes>\n    userMessages: UsersMessagesTypes\n}\n\nexport type FriendTypes = {\n    id: string\n    name: string\n    avatar: string\n}\n\nexport type FriendsTypes = {\n    [key: string]: FriendTypes\n}\n\nexport type NavbarTypes = {\n    friends: FriendsTypes\n}\n\nexport type StateTypes = {\n    profile: ProfileTypes\n    dialogs: DialogsTypes\n    navbar: NavbarTypes\n}\n\n// Post Function\n\n// add new post\n\nexport const addNewPost = () => {\n    const postsClone = clone(state.profile.posts.posts)\n    const newPost = {\n        id: v1(),\n        text: state.profile.posts.newPostText,\n        time: new Date(),\n        likes: 0,\n    }\n    state.profile.posts.posts = [newPost, ...postsClone]\n    state.profile.posts.newPostText = ''\n    rerenderTree(state)\n}\n\n// change text for new post\n\nexport const changeText = (newText: string) => {\n    state.profile.posts.newPostText = newText\n    rerenderTree(state)\n}\n\n// state\n\nexport const state: StateTypes = {\n    profile: {\n        user: {\n            id: '0',\n            firstName: 'John',\n            lastName: 'Dou',\n            surName: '',\n            avatar: 'https://ichef.bbci.co.uk/news/976/cpsprodpb/A7E9/production/_118158924_gettyimages-507245091.jpg',\n            background: 'https://st.depositphotos.com/1522993/4737/v/950/depositphotos_47372005-stock-illustration-orange-blue-background-with-triagles.jpg',\n            birthDate: '2 January 2000',\n            city: 'Minsk',\n            education: 'BSU\\'11',\n            website: 'https://it-kamasutra.com',\n        },\n        posts: {\n            userId: '0',\n            newPostText: '',\n            posts: [\n                {\n                    id: 'ccc',\n                    text: 'В новой записи вы решили уточнить точное время дня (а точнее ночи), когда именно была сделана запись. Строку со временем можно оставить просто текстом, но есть вариант получше. В HTML есть специальный тег для разметки даты и времени',\n                    time: new Date(`2021-07-18T15:07:55.582Z`),\n                    likes: 3,\n\n                },\n                {\n                    id: 'vvv',\n                    text: 'Инструменты для статической типизации, такие как Flow или TypeScript, позволяют отлавливать большую часть ошибок ещё до исполнения кода. Кроме того, они существенно улучшают процессы разработки, добавляя автодополнение и другие возможности. Для приложений с большой кодовой базой мы рекомендуем использовать Flow или TypeScript вместо PropTypes.',\n                    time: new Date(`2021-07-18T18:07:13.943Z`),\n                    likes: 20,\n                },\n                {\n                    id: 'lll',\n                    text: 'Flow — это библиотека для статической типизации JavaScript, разработанная в Facebook и часто применяемая в связке с React. Flow расширяет возможности JavaScript, добавляя аннотации типов для переменных, функций и React-компонентов.',\n                    time: new Date(`2021-07-18T18:38:10.515Z`),\n                    likes: 11\n                }\n            ],\n        },\n    },\n    dialogs: {\n        userDialogs: [\n            {\n                id: '0',\n                name: 'John',\n            },\n            {\n                id: '1',\n                name: 'Sara',\n            },\n            {\n                id: '2',\n                name: 'George',\n            },\n            {\n                id: '3',\n                name: 'Jinny',\n            },\n            {\n                id: '4',\n                name: 'Harry',\n            },\n        ],\n        userMessages: {\n            '0': {\n                messages: [\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Hi',\n                        time: '22:00',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'How are you?',\n                        time: '22:01',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'What are you doing now?',\n                        time: '22:02',\n                    },\n                ]\n            },\n            '1': {\n                messages: [\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Hello',\n                        time: '22:00',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Do you wanna go for walks?',\n                        time: '22:01',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Let\\'s meet at five',\n                        time: '22:02',\n                    },\n                ]\n            },\n            '2': {\n                messages: [\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Yo',\n                        time: '22:00',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Are you sleeping?',\n                        time: '22:01',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Watch this crazy stuff',\n                        time: '22:02',\n                    },\n                ]\n            },\n            '3': {\n                messages: [\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Oh man',\n                        time: '22:00',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'You so mad',\n                        time: '22:01',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Your task in this kata is to implement a function that calculates the sum of the integers inside a string. For example, in the string \"The30quick20brown10f0x1203jumps914ov3r1349the102l4zy dog\", the sum of the integers is 3635.',\n                        time: '22:02',\n                    },\n                ]\n            },\n            '4': {\n                messages: [\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'See you later',\n                        time: '22:00',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'Don\\'t forget about our business',\n                        time: '22:01',\n                    },\n                    {\n                        id: v1(),\n                        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n                        message: 'I call you later',\n                        time: '22:02',\n                    },\n                ],\n            }\n        }\n    },\n    navbar: {\n        friends: {\n            '0': {\n                id: '0',\n                name: 'John',\n                avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n            },\n            '1': {\n                id: '1',\n                name: 'Sara',\n                avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n            },\n            '2': {\n                id: '2',\n                name: 'George',\n                avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n            },\n            '3': {\n                id: '3',\n                name: 'Jinny',\n                avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n            },\n            '4': {\n                id: '4',\n                name: 'Harry',\n                avatar: 'https://magazine.skyeng.ru/wp-content/uploads/2019/03/shutterstock_745196731.jpg',\n            },\n        }\n    }\n}","import React, { FormEvent, ChangeEvent, KeyboardEvent } from 'react'\nimport { FormButton } from '../../FormButton/FormButton'\nimport { changeText } from '../../../redux/state'\nimport s from './NewPost.module.css'\n\ntype PropTypes = {\n    newPostText: string\n    addNewPost: () => void\n}\n\nexport const NewPost:React.FC<PropTypes> = ({ newPostText, addNewPost }) => {\n\n    const createNewPost = () => addNewPost()\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        createNewPost()\n    }\n    const onEnterPressHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            createNewPost()\n        }\n    }\n\n    const changePostTextHandler = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        changeText(event.currentTarget.value)\n    }\n\n    return (\n        <form\n            className={ s.newPostContainer }\n            onSubmit={ submitHandler }\n        >\n            <textarea\n                className={ s.text }\n                rows={ 5 }\n                value={ newPostText }\n                placeholder=\"Write text...\"\n                onChange={ changePostTextHandler }\n                onKeyPress={ onEnterPressHandler }\n            />\n            <FormButton\n                value=\"Add post\"\n                position=\"end\"\n                primary={ true }\n                size=\"medium\"\n            />\n        </form>\n    )\n}","import React from 'react'\nimport { Avatar } from '../../Avatar/Avatar'\nimport s from './PostItem.module.css'\n\n\ntype PropTypes = {\n    avatarUrl: string\n    text: string\n    likes: number\n    time: Date\n}\n\nexport const PostItem:React.FC<PropTypes> = (\n    {\n        avatarUrl,\n        text,\n        time,\n        likes\n    }) => {\n\n    const date = time.getDate()\n    const month = time.getMonth() + 1 > 9 ? time.getMonth() + 1 : `0${time.getMonth() + 1}`\n    const year = time.getFullYear()\n    const hours = time.getHours()\n    const minutes = time.getMinutes() > 9 ? time.getMinutes() : `0${time.getMinutes()}`\n    const humanDate = `${ date }.${ month }.${ year } ${ hours }:${ minutes }`\n\n    return (\n        <section className={ s.postItem }>\n            <Avatar avatarUrl={ avatarUrl } />\n            <div className={ s.container }>\n                <article className={ s.text }>{ text }</article>\n                <time\n                    className={ s.date }\n                    dateTime={`${ time }`}\n                >\n                    { humanDate }\n                </time>\n                <span className={ s.reaction }>likes { likes }</span>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport { NewPost } from '../NewPost/NewPost'\nimport { PostItem } from '../PostItem/PostItem'\nimport { PostsTypes } from '../../../redux/state'\n\nimport s from './Posts.module.css'\n\ntype PropTypes = {\n    avatar: string\n    userPosts: PostsTypes\n    addNewPost: () => void\n}\n\nexport const Posts: React.FC<PropTypes> = (\n    {\n        avatar,\n        userPosts,\n        addNewPost,\n    }) => {\n\n    const { posts, newPostText } = userPosts\n    const mappedPosts = posts.map((post) => (\n        <PostItem\n            avatarUrl={ avatar }\n            text={ post.text }\n            time={ post.time }\n            likes={ post.likes }\n            key={ post.id }\n        />\n    ))\n\n    return (\n        <div className={ s.postsContainer }>\n            <h2 className={ s.title }>My Posts</h2>\n            <NewPost newPostText={ newPostText } addNewPost={ addNewPost }/>\n            { mappedPosts }\n        </div>\n    )\n}","import React from 'react'\nimport { UserInfo } from './UserInfo/UserInfo'\nimport { PostsTypes, UserTypes } from '../../redux/state'\nimport { Posts } from './Posts/Posts'\nimport s from './Profile.module.css'\n\n\ntype PropTypes = {\n    user: UserTypes\n    posts: PostsTypes\n    addNewPost: () => void\n}\n\nexport const Profile: React.FC<PropTypes> = (\n    {\n        user,\n        posts,\n        addNewPost,\n    }) => {\n    return (\n        <main className={ s.profile }>\n            <div\n                className={ s.image }\n                style={ { backgroundImage: `url(${ user.background })` } }\n            ></div>\n            <UserInfo user={ user }/>\n            <Posts avatar={ user.avatar } userPosts={ posts } addNewPost={ addNewPost }/>\n        </main>\n    )\n}","import React from 'react'\nimport { ProfileTypes } from '../../redux/state'\nimport { Profile } from '../../components/Profile/Profile'\nimport { addNewPost } from '../../redux/state'\n\ntype PropTypes = {\n    profile: ProfileTypes\n}\n\nexport const ProfilePage: React.FC<PropTypes> = ({ profile }) => {\n    const { user, posts } = profile\n    return (\n        <>\n            <Profile user={ user } posts={ posts } addNewPost={ addNewPost }/>\n        </>\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from './Dialog.module.css'\nimport { DialogTypes } from '../../../redux/state'\n\ntype PropTypes = {\n    dialog: DialogTypes\n    selectDialogCallback: (id: string) => void\n}\n\nexport const Dialog:React.FC<PropTypes> = ({ dialog, selectDialogCallback }) => {\n\n    const onClickHandler = () => {\n        selectDialogCallback(dialog.id)\n    }\n\n    return (\n        <li\n            className={ s.item }\n            onClick={ onClickHandler }\n        >\n            <NavLink\n                className={ s.link }\n                to={`/dialogs/${dialog.id}`}\n                activeClassName={s.active}\n            >\n                { dialog.name }\n            </NavLink>\n        </li>\n    )\n}","import React  from 'react'\nimport { UserMessageTypes } from '../../../../redux/state'\nimport { Avatar } from '../../../Avatar/Avatar'\nimport s from './Message.module.css'\n\n\n\ntype PropTypes = {\n    message: UserMessageTypes\n}\n\nexport const Message: React.FC<PropTypes> = ({ message }) => {\n\n    return (\n        <div className={ s.itemContainer }>\n            <Avatar avatarUrl={message.avatar} size='small' shape='round' />\n            <div className={ s.messageContainer }>\n                <p className={ s.message }>{ message.message }</p>\n                <span className={ s.time }>{ message.time }</span>\n            </div>\n        </div>\n    )\n}\n","import React, {FormEvent, useRef} from 'react'\nimport s from './NewMessage.module.css'\nimport {FormButton} from \"../../../FormButton/FormButton\";\n\nexport const NewMessage = () => {\n    const messageRef = useRef<HTMLTextAreaElement>(null)\n\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const date = new Date()\n        console.log((messageRef.current as HTMLTextAreaElement).value)\n        console.log(date)\n    }\n\n    return (\n        <div className={ s.newMessageContainer }>\n            <form\n                className={ s.form }\n                onSubmit={ submitHandler }\n            >\n                <textarea\n                    ref={ messageRef }\n                    className={ s.newMessageText }\n                    rows={ 1 }\n                    placeholder=\"Write message...\"\n                />\n                <FormButton value=\"Send\" position=\"stretch\" primary={ true } size=\"medium\" />\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport { UserMessageTypes } from '../../../redux/state'\nimport { Message } from './Message/Message'\nimport { NewMessage } from './NewMessage/NewMessage'\nimport s from './Messages.module.css'\n\n\ntype PropTypes = {\n    messages: Array<UserMessageTypes>\n}\n\nexport const Messages:React.FC<PropTypes> = ({ messages }) => {\n    const mappedMessages = messages.map((message:UserMessageTypes) => (\n        <Message\n            key={ message.id }\n            message={ message }\n        />\n    ))\n\n    return (\n        <div className={ s.messagesContainer }>\n            { mappedMessages }\n            <NewMessage />\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { DialogTypes, UserMessageTypes, UsersMessagesTypes } from '../../redux/state'\nimport { Dialog } from './Dialog/Dialog'\nimport { Messages } from './Messages/Messages'\nimport s from './Dialogs.module.css'\n\ntype PropTypes = {\n    userDialogs: Array<DialogTypes>\n    userMessages: UsersMessagesTypes\n}\n\nconst selectMessages = (id: string, userMessages: UsersMessagesTypes): Array<UserMessageTypes> | null => {\n    const { messages } = userMessages[`${id}`]\n    return messages && messages.length ? messages : null\n}\n\nexport const Dialogs:React.FC<PropTypes> = ({ userDialogs, userMessages }) => {\n    const [messages, setMessages] = useState<Array<UserMessageTypes> | null>(null)\n    const selectDialogCallback = (id: string) => setMessages(() => selectMessages(id, userMessages))\n\n    const mappedDialogs = userDialogs.map((dialog: DialogTypes) => (\n        <Dialog\n            dialog={ dialog }\n            selectDialogCallback={ selectDialogCallback }\n            key={ dialog.id }\n        />\n    ))\n\n    return (\n        <div className={s.container}>\n            <div className={s.dialogs}>\n                <ul className={s.list}>\n                    { mappedDialogs }\n                </ul>\n            </div>\n            <div className={ s.messages }>\n                { messages ? <Messages messages={ messages }/> : 'Select dialog' }\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { DialogsTypes } from '../../redux/state'\nimport { Dialogs } from '../../components/Dialogs/Dialogs'\n\ntype PropTypes = {\n    dialogs: DialogsTypes\n}\n\nexport const DialogsPage:React.FC<PropTypes> = ({ dialogs }) => {\n    const { userDialogs, userMessages } = dialogs\n    return (\n        <>\n            <Dialogs userDialogs={ userDialogs } userMessages={ userMessages }/>\n        </>\n    )\n}","import React from 'react'\n\nexport const NewsPage = () => {\n    return (\n        <>\n            NewsPage\n        </>\n    )\n}","import React from 'react'\n\nexport const MusicPage = () => {\n    return (\n        <>\n            MusicPage\n        </>\n    )\n}","import React from 'react'\n\nexport const SettingsPage = () => {\n    return (\n        <>\n            SettingsPage\n        </>\n    )\n}","import React from \"react\"\nimport s from './Header.module.css'\n\nexport const Header = () => {\n    return (\n        <header className={s.header}>\n            <img\n                className={s.image}\n                src=\"https://img.icons8.com/ios-filled/50/000000/logo.png\"\n                alt=\"logo\"\n            />\n            <h1>Такая-то сеть</h1>\n        </header>\n    )\n}","import React from 'react'\nimport { FriendTypes } from '../../../redux/state'\nimport { Avatar } from '../../Avatar/Avatar'\nimport s from './FriendItem.module.css'\n\ntype PropTypes = {\n    friend: FriendTypes\n}\n\nexport const FriendItem:React.FC<PropTypes> = ({ friend }) => {\n   const { name, avatar } = friend\n    return (\n        <div className={s.friendContainer}>\n            <span className={s.friendName}>{ name }</span>\n            <Avatar avatarUrl={ avatar } shape='round' size='medium' />\n        </div>\n    )\n}","import React from \"react\"\nimport { NavbarTypes } from '../../redux/state'\nimport { NavLink } from 'react-router-dom'\nimport { FriendItem } from './FriendItem/FriendItem'\nimport s from './NavBar.module.css'\n\n\n\ntype NavItemTypes = {\n    id: number\n    name: string\n}\ntype NavTypes = Array<NavItemTypes>\n\ntype PropTypes = {\n    navbar: NavbarTypes\n}\n\nconst nav: NavTypes = [\n    {id:0, name: 'Profile'},\n    {id:1, name: 'Dialogs'},\n    {id:2, name: 'News'},\n    {id:3, name: 'Music'},\n    {id:4, name: 'Settings'}\n]\n\nexport const NavBar:React.FC<PropTypes> = ({ navbar }) => {\n    const mappedNavigation = nav.map((item, idx) => (\n            <div className={ s.item } key={ item.id }>\n                <NavLink\n                    to={`/${item.name.toLowerCase()}`}\n                    className={ s.link }\n                    activeClassName={s.active}\n                    href=\"#h\"\n                >{ item.name }</NavLink>\n            </div>\n    ))\n\n    const mappedFriends = Object.values(navbar.friends).map((friend) => (\n        <FriendItem\n            friend={ friend }\n            key={ friend.id }\n        />\n    ))\n\n\n    return (\n        <nav className={s.nav}>\n            { mappedNavigation }\n            <div className={s.friendsContainer}>\n                { mappedFriends }\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { StateTypes } from './redux/state'\nimport { useRoutes } from './routes'\nimport { Header } from './components/Header/Header'\nimport { NavBar } from './components/NavBar/NavBar'\nimport './App.css'\n\n\nexport type AppTypes = {\n    state: StateTypes\n}\n\nexport const App:React.FC<AppTypes> = ({ state }) => {\n  const { profile, dialogs, navbar } = state\n  const routes = useRoutes(profile, dialogs)\n  return (\n      <Router>\n        <div className=\"app-wrapper\">\n            <Header />\n            <NavBar navbar={ navbar } />\n            { routes }\n        </div>\n      </Router>\n  )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { ProfileTypes, DialogsTypes } from './redux/state'\nimport { ProfilePage } from './Pages/ProfilePage/ProfilePage'\nimport { DialogsPage } from './Pages/DialogsPage/DialogsPage'\nimport { NewsPage } from './Pages/NewsPage/NewsPage'\nimport { MusicPage } from './Pages/MusicPage/MusicPage'\nimport { SettingsPage } from './Pages/SettingsPage/SettingsPage'\n\nexport const useRoutes = (profile: ProfileTypes, dialogs: DialogsTypes) => {\n    return (\n        <Switch>\n            <Route path=\"/profile\">\n                <ProfilePage profile={ profile } />\n            </Route>\n            <Route path=\"/dialogs\">\n                <DialogsPage dialogs={ dialogs } />\n            </Route>\n            <Route path=\"/news\">\n                <NewsPage />\n            </Route>\n            <Route path=\"/music\">\n                <MusicPage />\n            </Route>\n            <Route path=\"/settings\">\n                <SettingsPage />\n            </Route>\n            <Redirect to=\"/profile\" />\n        </Switch>\n    )\n}","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport { App } from './App'\nimport { StateTypes } from './redux/state'\n\n\nexport const rerenderTree = (state: StateTypes) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                state={ state }\n            />\n        </React.StrictMode>,\n        document.getElementById('root'),\n    )\n}","import './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport { rerenderTree } from './render'\nimport { state } from './redux/state'\n\nrerenderTree(state)\n\nreportWebVitals()"],"sourceRoot":""}